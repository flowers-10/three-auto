import{_ as a,c as e,a1 as t,o as h}from"./chunks/framework.DiRI4YF-.js";const w=JSON.parse('{"title":"Shadow","description":"","frontmatter":{"outline":"deep"},"headers":[],"relativePath":"en/config/shadow.md","filePath":"en/config/shadow.md","lastUpdated":1756455813000}'),d={name:"en/config/shadow.md"};function s(i,o,n,r,l,p){return h(),e("div",null,o[0]||(o[0]=[t('<h1 id="shadow" tabindex="-1">Shadow <a class="header-anchor" href="#shadow" aria-label="Permalink to &quot;Shadow&quot;">​</a></h1><p>Shadow component. Defines shadow-related configuration options, mainly controlling shadow display, size, color, transparency, rotation, and position properties.</p><h2 id="shadow-show" tabindex="-1">shadow.show <a class="header-anchor" href="#shadow-show" aria-label="Permalink to &quot;shadow.show&quot;">​</a></h2><p><code>boolean</code></p><p>Whether to display shadows. When set to true, shadows will be visible.</p><h2 id="shadow-width" tabindex="-1">shadow.width <a class="header-anchor" href="#shadow-width" aria-label="Permalink to &quot;shadow.width&quot;">​</a></h2><p><code>number</code></p><p>The width of the shadow to be cast onto the related plane.</p><h2 id="shadow-height" tabindex="-1">shadow.height <a class="header-anchor" href="#shadow-height" aria-label="Permalink to &quot;shadow.height&quot;">​</a></h2><p><code>number</code></p><p>The length of the shadow to be cast onto the related plane.</p><h2 id="shadow-rotation" tabindex="-1">shadow.rotation <a class="header-anchor" href="#shadow-rotation" aria-label="Permalink to &quot;shadow.rotation&quot;">​</a></h2><p><code>Object</code></p><p>The rotation angle of the shadow to be cast onto the related plane.</p><h3 id="shadow-rotation-x" tabindex="-1">shadow.rotation.x <a class="header-anchor" href="#shadow-rotation-x" aria-label="Permalink to &quot;shadow.rotation.x&quot;">​</a></h3><p><code>number</code></p><p>The angle of rotation around the <code>X</code> axis for the related plane.</p><h3 id="shadow-rotation-y" tabindex="-1">shadow.rotation.y <a class="header-anchor" href="#shadow-rotation-y" aria-label="Permalink to &quot;shadow.rotation.y&quot;">​</a></h3><p><code>number</code></p><p>The angle of rotation around the <code>Y</code> axis for the related plane.</p><h2 id="shadow-position" tabindex="-1">shadow.position <a class="header-anchor" href="#shadow-position" aria-label="Permalink to &quot;shadow.position&quot;">​</a></h2><p><code>Object</code></p><p>The position of the shadow to be cast onto the related plane.</p><h3 id="shadow-position-x" tabindex="-1">shadow.position.x <a class="header-anchor" href="#shadow-position-x" aria-label="Permalink to &quot;shadow.position.x&quot;">​</a></h3><p><code>number</code></p><p>Horizontal offset of the related plane.</p><h3 id="shadow-position-y" tabindex="-1">shadow.position.y <a class="header-anchor" href="#shadow-position-y" aria-label="Permalink to &quot;shadow.position.y&quot;">​</a></h3><p><code>number</code></p><p>Vertical offset of the related plane.</p><h3 id="shadow-position-z" tabindex="-1">shadow.position.z <a class="header-anchor" href="#shadow-position-z" aria-label="Permalink to &quot;shadow.position.z&quot;">​</a></h3><p><code>number</code></p><p>Depth offset of the related plane.</p><h2 id="shadow-color" tabindex="-1">shadow.color <a class="header-anchor" href="#shadow-color" aria-label="Permalink to &quot;shadow.color&quot;">​</a></h2><p><code>string | number</code></p><p>The color of the shadow.</p><h2 id="shadow-opacity" tabindex="-1">shadow.opacity <a class="header-anchor" href="#shadow-opacity" aria-label="Permalink to &quot;shadow.opacity&quot;">​</a></h2><p><code>number</code></p><p>Shadow transparency.</p>',38)]))}const u=a(d,[["render",s]]);export{w as __pageData,u as default};
