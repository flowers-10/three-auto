import{_ as e,c as t,a1 as r,o as s}from"./chunks/framework.DiRI4YF-.js";const u=JSON.parse('{"title":"地球（Earth）","description":"","frontmatter":{"outline":"deep"},"headers":[],"relativePath":"docs/components/charts-earth.md","filePath":"zh/docs/components/charts-earth.md","lastUpdated":1734419204000}'),o={name:"docs/components/charts-earth.md"};function i(h,a,n,p,l,c){return s(),t("div",null,a[0]||(a[0]=[r('<h1 id="地球-earth" tabindex="-1">地球（Earth） <a class="header-anchor" href="#地球-earth" aria-label="Permalink to &quot;地球（Earth）&quot;">​</a></h1><h2 id="构造函数-constructor" tabindex="-1">构造函数（Constructor） <a class="header-anchor" href="#构造函数-constructor" aria-label="Permalink to &quot;构造函数（Constructor）&quot;">​</a></h2><p>此构造函数创建一个新的Earth。</p><p><a href="https://github.com/flowers-10/three-auto/blob/main/packages/examples/src/earth.ts" target="_blank" rel="noreferrer"><img src="https://img.picgo.net/2024/11/01/379655344-7aedc460-7e95-44a2-a954-a0fa6a9555d6e0b291fee4c42a4c.gif" alt="地球" loading="lazy"></a></p><div class="tip custom-block"><p class="custom-block-title">注意</p><p>点击图片跳转案例！ ⬆️</p><p>配置项详情请见配置项手册。</p></div><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Earth</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(option: Partial</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">SeriesConfig</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, instance: ThreeInstance)；</span></span></code></pre></div><p>构造函数接收两个参数，<code>option</code>和<code>ThreeInstance</code>实例。</p><h2 id="属性-attribute" tabindex="-1">属性（attribute） <a class="header-anchor" href="#属性-attribute" aria-label="Permalink to &quot;属性（attribute）&quot;">​</a></h2><h3 id="resources-resources" tabindex="-1">.resources: Resources; <a class="header-anchor" href="#resources-resources" aria-label="Permalink to &quot;.resources: Resources;&quot;">​</a></h3><p>渲染地球所需要的静态资源，主要类型是TEXTURE（图片资源）。</p><h3 id="earth-three-mesh-null" tabindex="-1">.earth: THREE.Mesh | null; <a class="header-anchor" href="#earth-three-mesh-null" aria-label="Permalink to &quot;.earth: THREE.Mesh | null;&quot;">​</a></h3><p>地球的网格对象，你可以访问它对它做一些其他处理。</p><h3 id="group-three-group" tabindex="-1">.group: THREE.Group; <a class="header-anchor" href="#group-three-group" aria-label="Permalink to &quot;.group: THREE.Group;&quot;">​</a></h3><p>地球的曲线、地图、标注等网格对象，你可以访问它们对它们做一些其他处理。</p><h3 id="option-earthoptions" tabindex="-1">.option: EarthOptions; <a class="header-anchor" href="#option-earthoptions" aria-label="Permalink to &quot;.option: EarthOptions;&quot;">​</a></h3><p>访问地球配置项。</p>',16)]))}const k=e(o,[["render",i]]);export{u as __pageData,k as default};
