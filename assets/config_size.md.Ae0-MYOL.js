import{_ as o,c as d,a1 as i,o as c}from"./chunks/framework.DiRI4YF-.js";const u=JSON.parse('{"title":"Size","description":"","frontmatter":{"outline":"deep"},"headers":[],"relativePath":"config/size.md","filePath":"zh/config/size.md","lastUpdated":1734485107000}'),t={name:"config/size.md"};function a(s,e,n,p,r,l){return c(),d("div",null,e[0]||(e[0]=[i('<h1 id="size" tabindex="-1">Size <a class="header-anchor" href="#size" aria-label="Permalink to &quot;Size&quot;">​</a></h1><p>尺寸组件。用来监听页面或者元素尺寸变化来实时更新<code>three</code>实例渲染。</p><h2 id="size-type-window" tabindex="-1">size.type = &quot;window&quot; <a class="header-anchor" href="#size-type-window" aria-label="Permalink to &quot;size.type = &quot;window&quot;&quot;">​</a></h2><p><code>string</code></p><p>指定监听元素宽高尺寸的类型。</p><p>默认监听<code>window</code>宽高尺寸。</p><p><strong>可选：</strong></p><ul><li><code>&#39;window&#39;</code> 监听<code>window</code>宽高尺寸</li><li><code>&#39;parent&#39;</code> 监听当前<code>canvas</code>的外层元素宽高尺寸</li></ul><h2 id="size-dom" tabindex="-1">size.dom <a class="header-anchor" href="#size-dom" aria-label="Permalink to &quot;size.dom&quot;">​</a></h2><p><code>HTMLElement</code></p><p>传入需要监听宽高的<code>dom</code>节点元素。</p><div class="tip custom-block"><p class="custom-block-title">注意</p><p><code>dom</code> 和 <code>id</code>同时存在时优先取<code>dom</code></p></div><h2 id="size-id" tabindex="-1">size.id <a class="header-anchor" href="#size-id" aria-label="Permalink to &quot;size.id&quot;">​</a></h2><p><code>string | number</code></p><p><code>threeAuto</code>根据配置项<code>size.id</code>来自动获取相关<code>dom</code>节点并根据节点父元素的宽高自动更新渲染器。</p><div class="tip custom-block"><p class="custom-block-title">注意</p><p>当<code>size.type</code>为<code>&#39;parent&#39;</code>时，<code>size.id</code>或者<code>size.dom</code>必须传入,否则取<code>window</code>的宽高。</p></div>',16)]))}const z=o(t,[["render",a]]);export{u as __pageData,z as default};
