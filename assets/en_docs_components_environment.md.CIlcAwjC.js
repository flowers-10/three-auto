import{W as d,C as h}from"./chunks/three-auto.es.ChBkX-rc.js";import{S as k,E as m,M as o,a as u,b as g,T as E,c as b}from"./chunks/three.module.BezAEQ1K.js";import{R as v,G as y}from"./chunks/GroundedSkybox.DeRoteZs.js";import{d as C,v as f,c as x,a1 as r,j as l,o as F}from"./chunks/framework.DiRI4YF-.js";const S=JSON.parse('{"title":"Environment","description":"","frontmatter":{"outline":"deep"},"headers":[],"relativePath":"en/docs/components/environment.md","filePath":"en/docs/components/environment.md","lastUpdated":1756280400000}'),T={name:"en/docs/components/environment.md"},M=C({...T,setup(q){const c=()=>{console.log(111)};return f(()=>{const s=new v,e=new d(void 0,{size:{type:"parent"}});s.load("/three-auto/env/rustig_koppie_puresky_1k.hdr",a=>{a.colorSpace=k,a.mapping=m,e.scene.background=a;const n=new y(a,15,70);n.scale.setScalar(50),e.scene.add(n)});const t=new h(e);console.log(t.cubeCamera);const p=new o(new u(4,32,16),new g({roughness:0,metalness:1,color:11184810})),i=new o(new E(12,.5),new b({color:"#fff"}));e.scene.add(p),e.scene.add(i),e._camera.position.set(20,20,20),e._renderer.setClearColor("#000"),e.time.on("tick",()=>{i.rotation.x=Math.sin(e.elapsedTime)*2,t.update()})}),(s,e)=>(F(),x("div",null,[e[1]||(e[1]=r('<h1 id="environment" tabindex="-1">Environment <a class="header-anchor" href="#environment" aria-label="Permalink to &quot;Environment&quot;">​</a></h1><p>The <code>Environment</code> class is used to create and manage environment maps in Three.js scenes. It generates dynamic environment maps using <code>THREE.CubeCamera</code> and applies them to the scene, typically used for reflection effects and global ambient lighting.</p><p>This class inherits from <code>BaseThree</code> and is initialized through a <code>ThreeInstance</code> instance. Environment maps are generated through a cube camera (<code>THREE.CubeCamera</code>) that renders six faces of the scene to create the environment map.</p><div class="tip custom-block"><p class="custom-block-title">Note</p><p>Environment map images can be used as backgrounds and directly on objects for reflections and lighting. They illuminate the entire scene in a very realistic way.</p></div>',4)),l("div",{onDblclick:c,style:{width:"100%",height:"400px",position:"relative","border-radius":"12px",overflow:"hidden"}},e[0]||(e[0]=[l("canvas",{id:"_scene"},null,-1)]),32),e[2]||(e[2]=r(`<div class="tip custom-block"><p class="custom-block-title">Note</p><p>Click the image to jump to the example! ⬆️</p></div><h2 id="constructor" tabindex="-1">Constructor <a class="header-anchor" href="#constructor" aria-label="Permalink to &quot;Constructor&quot;">​</a></h2><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Environment</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(instance: ThreeInstance)</span></span></code></pre></div><p>This constructor creates a new Environment.</p><h3 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h3><ul><li><strong>instance</strong> (<code>ThreeInstance</code>): A <code>ThreeInstance</code> object containing basic Three.js renderer, scene, and other settings.</li></ul><h2 id="methods" tabindex="-1">Methods <a class="header-anchor" href="#methods" aria-label="Permalink to &quot;Methods&quot;">​</a></h2><h3 id="update-void" tabindex="-1">update() :void <a class="header-anchor" href="#update-void" aria-label="Permalink to &quot;update() :void&quot;">​</a></h3><p>Updates the cube camera to re-render the environment texture. This method should be called every frame to maintain real-time environment mapping.</p><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">instance.time.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">on</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;tick&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, () </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    animation.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">update</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre></div><h2 id="properties" tabindex="-1">Properties <a class="header-anchor" href="#properties" aria-label="Permalink to &quot;Properties&quot;">​</a></h2><h3 id="cubecamera" tabindex="-1">cubeCamera <a class="header-anchor" href="#cubecamera" aria-label="Permalink to &quot;cubeCamera&quot;">​</a></h3><p><code>THREE.CubeCamera</code> instance used to render six faces of the scene and generate environment maps. Access the current <code>cubeCamera</code> camera.</p><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> env</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> AUTO</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Environment</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(instance)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(env.cubeCamera);</span></span></code></pre></div>`,14))]))}});export{S as __pageData,M as default};
