import{_ as e,c as o,a1 as r,o as t}from"./chunks/framework.DiRI4YF-.js";const h=JSON.parse('{"title":"Camera","description":"","frontmatter":{"outline":"deep"},"headers":[],"relativePath":"en/config/camera.md","filePath":"en/config/camera.md","lastUpdated":1756455813000}'),c={name:"en/config/camera.md"};function n(i,a,l,m,s,d){return t(),o("div",null,a[0]||(a[0]=[r('<h1 id="camera" tabindex="-1">Camera <a class="header-anchor" href="#camera" aria-label="Permalink to &quot;Camera&quot;">​</a></h1><p><code>object</code></p><p>Camera component. Manages <code>three.js</code> camera-related configurations.</p><h2 id="camera-type-perspectivecamera" tabindex="-1">camera.type = &quot;PerspectiveCamera&quot; <a class="header-anchor" href="#camera-type-perspectivecamera" aria-label="Permalink to &quot;camera.type = &quot;PerspectiveCamera&quot;&quot;">​</a></h2><p><code>string</code></p><p>Specifies the camera type.</p><p>Defaults to <code>PerspectiveCamera</code> perspective camera.</p><p><strong>Options:</strong></p><ul><li><code>&#39;PerspectiveCamera&#39;</code> This camera uses <a href="https://en.wikipedia.org/wiki/Perspective_(graphical)" target="_blank" rel="noreferrer">perspective projection</a> for projection.</li><li><code>&#39;OrthographicCamera&#39;</code> This camera uses <a href="https://en.wikipedia.org/wiki/Orthographic_projection" target="_blank" rel="noreferrer">orthographic projection</a> for projection.</li></ul><h2 id="camera-fov-60" tabindex="-1">camera.fov = 60 <a class="header-anchor" href="#camera-fov-60" aria-label="Permalink to &quot;camera.fov = 60&quot;">​</a></h2><p><code>number</code></p><p>Camera frustum vertical field of view angle.</p><h2 id="camera-near-1" tabindex="-1">camera.near = 1 <a class="header-anchor" href="#camera-near-1" aria-label="Permalink to &quot;camera.near = 1&quot;">​</a></h2><p><code>number</code></p><p>Camera frustum near plane.</p><h2 id="camera-far-10000" tabindex="-1">camera.far = 10000 <a class="header-anchor" href="#camera-far-10000" aria-label="Permalink to &quot;camera.far = 10000&quot;">​</a></h2><p><code>number</code></p><p>Camera frustum far plane.</p><h2 id="camera-position" tabindex="-1">camera.position <a class="header-anchor" href="#camera-position" aria-label="Permalink to &quot;camera.position&quot;">​</a></h2><p><code>object</code></p><p>Camera position</p><h3 id="camera-position-x" tabindex="-1">camera.position.x <a class="header-anchor" href="#camera-position-x" aria-label="Permalink to &quot;camera.position.x&quot;">​</a></h3><p><code>number</code></p><p>Horizontal offset</p><h3 id="camera-position-y" tabindex="-1">camera.position.y <a class="header-anchor" href="#camera-position-y" aria-label="Permalink to &quot;camera.position.y&quot;">​</a></h3><p><code>number</code></p><p>Vertical offset</p><h3 id="camera-position-z" tabindex="-1">camera.position.z <a class="header-anchor" href="#camera-position-z" aria-label="Permalink to &quot;camera.position.z&quot;">​</a></h3><p><code>number</code></p><p>Depth offset</p><h2 id="camera-lookat-true" tabindex="-1">camera.lookAt = true <a class="header-anchor" href="#camera-lookat-true" aria-label="Permalink to &quot;camera.lookAt = true&quot;">​</a></h2><p><code>boolean</code></p><p>Whether to point to the current scene</p><h2 id="camera-controls" tabindex="-1">camera.controls <a class="header-anchor" href="#camera-controls" aria-label="Permalink to &quot;camera.controls&quot;">​</a></h2><p><code>object</code></p><p>Orbit controls configuration, allows the camera to orbit around a target.</p><h3 id="camera-controls-show-true" tabindex="-1">camera.controls.show = true <a class="header-anchor" href="#camera-controls-show-true" aria-label="Permalink to &quot;camera.controls.show = true&quot;">​</a></h3><p><code>boolean</code></p><p>Whether to enable controls, defaults to <code>true</code></p><h3 id="camera-controls-enabledamping" tabindex="-1">camera.controls.enableDamping <a class="header-anchor" href="#camera-controls-enabledamping" aria-label="Permalink to &quot;camera.controls.enableDamping&quot;">​</a></h3><p><code>boolean</code></p><p>Set to <code>true</code> to enable damping (inertia), which gives the controls a sense of weight. Default is <code>true</code>. Note that if this is enabled, you must call <code>.update()</code> in your animation loop.</p><h3 id="camera-controls-minpolarangle" tabindex="-1">camera.controls.minPolarAngle <a class="header-anchor" href="#camera-controls-minpolarangle" aria-label="Permalink to &quot;camera.controls.minPolarAngle&quot;">​</a></h3><p><code>number</code></p><p>The minimum angle you can vertically rotate, ranges from <code>0</code> to <code>Math.PI</code>, defaults to <code>0</code>.</p><h3 id="camera-controls-maxpolarangle" tabindex="-1">camera.controls.maxPolarAngle <a class="header-anchor" href="#camera-controls-maxpolarangle" aria-label="Permalink to &quot;camera.controls.maxPolarAngle&quot;">​</a></h3><p><code>number</code></p><p>The maximum angle you can vertically rotate, ranges from <code>0</code> to <code>Math.PI</code>, defaults to <code>Math.PI</code>.</p><h3 id="camera-controls-minazimuthangle" tabindex="-1">camera.controls.minAzimuthAngle <a class="header-anchor" href="#camera-controls-minazimuthangle" aria-label="Permalink to &quot;camera.controls.minAzimuthAngle&quot;">​</a></h3><p><code>number</code></p><p>The minimum angle you can horizontally rotate. If set, the valid range is <code>[-2 * Math.PI, 2 * Math.PI]</code>, and the difference between upper and lower limits of rotation angle is less than <code>2 * Math.PI</code>. Default is infinity.</p><h3 id="camera-controls-maxazimuthangle" tabindex="-1">camera.controls.maxAzimuthAngle <a class="header-anchor" href="#camera-controls-maxazimuthangle" aria-label="Permalink to &quot;camera.controls.maxAzimuthAngle&quot;">​</a></h3><p><code>number</code></p><p>The maximum angle you can horizontally rotate. If set, the valid range is <code>[-2 * Math.PI, 2 * Math.PI]</code>, and the difference between upper and lower limits of rotation angle is less than <code>2 * Math.PI</code>. Default is infinity.</p><h3 id="camera-controls-enablepan-true" tabindex="-1">camera.controls.enablePan = true <a class="header-anchor" href="#camera-controls-enablepan-true" aria-label="Permalink to &quot;camera.controls.enablePan = true&quot;">​</a></h3><p><code>boolean</code></p><p>Enable or disable camera panning, defaults to <code>true</code>.</p>',57)]))}const u=e(c,[["render",n]]);export{h as __pageData,u as default};
