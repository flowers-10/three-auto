import{_ as o,c as t,a1 as i,o as d}from"./chunks/framework.DiRI4YF-.js";const m=JSON.parse('{"title":"Size","description":"","frontmatter":{"outline":"deep"},"headers":[],"relativePath":"en/config/size.md","filePath":"en/config/size.md","lastUpdated":1756455813000}'),n={name:"en/config/size.md"};function a(s,e,c,r,h,l){return d(),t("div",null,e[0]||(e[0]=[i('<h1 id="size" tabindex="-1">Size <a class="header-anchor" href="#size" aria-label="Permalink to &quot;Size&quot;">​</a></h1><p>Size component. Used to listen for page or element size changes to update the <code>three</code> instance rendering in real-time.</p><h2 id="size-type-window" tabindex="-1">size.type = &quot;window&quot; <a class="header-anchor" href="#size-type-window" aria-label="Permalink to &quot;size.type = &quot;window&quot;&quot;">​</a></h2><p><code>string</code></p><p>Specifies the type of element to listen for width and height dimensions.</p><p>By default, listens to <code>window</code> width and height dimensions.</p><p><strong>Options:</strong></p><ul><li><code>&#39;window&#39;</code> Listen to <code>window</code> width and height dimensions</li><li><code>&#39;parent&#39;</code> Listen to the outer element width and height dimensions of the current <code>canvas</code></li></ul><h2 id="size-dom" tabindex="-1">size.dom <a class="header-anchor" href="#size-dom" aria-label="Permalink to &quot;size.dom&quot;">​</a></h2><p><code>HTMLElement</code></p><p>Pass in the <code>dom</code> node element that needs to be listened for width and height.</p><div class="tip custom-block"><p class="custom-block-title">Note</p><p>When both <code>dom</code> and <code>id</code> exist, <code>dom</code> takes priority</p></div><h2 id="size-id" tabindex="-1">size.id <a class="header-anchor" href="#size-id" aria-label="Permalink to &quot;size.id&quot;">​</a></h2><p><code>string | number</code></p><p><code>threeAuto</code> automatically obtains the related <code>dom</code> node based on the configuration <code>size.id</code> and automatically updates the renderer based on the width and height of the node&#39;s parent element.</p><div class="tip custom-block"><p class="custom-block-title">Note</p><p>When <code>size.type</code> is <code>&#39;parent&#39;</code>, <code>size.id</code> or <code>size.dom</code> must be passed in, otherwise the width and height of <code>window</code> will be used.</p></div>',16)]))}const u=o(n,[["render",a]]);export{m as __pageData,u as default};
