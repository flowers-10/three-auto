import{_ as r,c as a,a1 as o,o as d}from"./chunks/framework.DiRI4YF-.js";const f=JSON.parse('{"title":"Renderer","description":"","frontmatter":{"outline":"deep"},"headers":[],"relativePath":"config/renderer.md","filePath":"zh/config/renderer.md","lastUpdated":1748401681000}'),l={name:"config/renderer.md"};function n(t,e,c,i,p,h){return d(),a("div",null,e[0]||(e[0]=[o('<h1 id="renderer" tabindex="-1">Renderer <a class="header-anchor" href="#renderer" aria-label="Permalink to &quot;Renderer&quot;">​</a></h1><p>用于配置 Three.js 渲染器的相关选项，控制渲染器的清除颜色、抗锯齿、透明度等属性。</p><h2 id="renderer-antialias-false" tabindex="-1">renderer.antialias = false <a class="header-anchor" href="#renderer-antialias-false" aria-label="Permalink to &quot;renderer.antialias = false&quot;">​</a></h2><p><code>boolean</code></p><p>是否启用抗锯齿。</p><p>当设置为 <code>true</code> 时，渲染器会启用抗锯齿功能，平滑图像中的锯齿边缘。适用于大部分场景以提高画面质量，但会增加一定的性能开销。</p><h2 id="renderer-alpha-false" tabindex="-1">renderer.alpha = false <a class="header-anchor" href="#renderer-alpha-false" aria-label="Permalink to &quot;renderer.alpha = false&quot;">​</a></h2><p><code>boolean</code></p><p>是否启用透明背景。</p><p>当设置为 <code>true</code> 时，渲染器的背景会设置为透明，适用于需要透明背景的场景或渲染到透明容器中的情况。</p><h2 id="renderer-logarithmicdepthbuffer-false" tabindex="-1">renderer.logarithmicDepthBuffer = false <a class="header-anchor" href="#renderer-logarithmicdepthbuffer-false" aria-label="Permalink to &quot;renderer.logarithmicDepthBuffer = false&quot;">​</a></h2><p><code>boolean</code></p><p>是否启用对数深度缓冲。</p><p>启用对数深度缓冲可以改善在深度范围较大的场景中出现的深度精度问题。对于有较远深度范围的场景，如大型户外场景，启用此选项可能会带来显著的改进。</p><h2 id="renderer-clearalpha-1" tabindex="-1">renderer.clearAlpha = 1 <a class="header-anchor" href="#renderer-clearalpha-1" aria-label="Permalink to &quot;renderer.clearAlpha = 1&quot;">​</a></h2><p><code>number</code></p><p>清除颜色的透明度值。 此选项控制渲染器每帧清除时的透明度，范围从 <code>0</code> 到 <code>1</code>。<code>0</code> 表示完全透明，<code>1</code> 表示完全不透明。</p><h2 id="renderer-clearcolor-000000" tabindex="-1">renderer.clearColor = &#39;#000000&#39; <a class="header-anchor" href="#renderer-clearcolor-000000" aria-label="Permalink to &quot;renderer.clearColor = &#39;#000000&#39;&quot;">​</a></h2><p><code>string</code></p><p>渲染器的清除背景颜色。 此选项设置渲染器在每帧渲染开始时清除画布的背景颜色。可以使用任何合法的 CSS 颜色表示方式，如十六进制颜色、RGB 或 RGBA。</p>',20)]))}const u=r(l,[["render",n]]);export{f as __pageData,u as default};
