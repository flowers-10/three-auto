import{D as W,H as u,F as T,e as F,L as j,f as v,M as X,a as O,V as q,c as J}from"./three.module.BezAEQ1K.js";class Q extends W{constructor(h){super(h),this.type=u}parse(h){const n=function(r,a){switch(r){case 1:throw new Error("THREE.RGBELoader: Read Error: "+(a||""));case 2:throw new Error("THREE.RGBELoader: Write Error: "+(a||""));case 3:throw new Error("THREE.RGBELoader: Bad File Format: "+(a||""));default:case 4:throw new Error("THREE.RGBELoader: Memory Error: "+(a||""))}},I=`
`,k=function(r,a,o){a=a||1024;let l=r.pos,s=-1,e=0,c="",t=String.fromCharCode.apply(null,new Uint16Array(r.subarray(l,l+128)));for(;0>(s=t.indexOf(I))&&e<a&&l<r.byteLength;)c+=t,e+=t.length,l+=128,t+=String.fromCharCode.apply(null,new Uint16Array(r.subarray(l,l+128)));return-1<s?(r.pos+=e+s+1,c+t.slice(0,s)):!1},C=function(r){const a=/^#\?(\S+)/,o=/^\s*GAMMA\s*=\s*(\d+(\.\d+)?)\s*$/,i=/^\s*EXPOSURE\s*=\s*(\d+(\.\d+)?)\s*$/,l=/^\s*FORMAT=(\S+)\s*$/,s=/^\s*\-Y\s+(\d+)\s+\+X\s+(\d+)\s*$/,e={valid:0,string:"",comments:"",programtype:"RGBE",format:"",gamma:1,exposure:1,width:0,height:0};let c,t;for((r.pos>=r.byteLength||!(c=k(r)))&&n(1,"no header found"),(t=c.match(a))||n(3,"bad initial token"),e.valid|=1,e.programtype=t[1],e.string+=c+`
`;c=k(r),c!==!1;){if(e.string+=c+`
`,c.charAt(0)==="#"){e.comments+=c+`
`;continue}if((t=c.match(o))&&(e.gamma=parseFloat(t[1])),(t=c.match(i))&&(e.exposure=parseFloat(t[1])),(t=c.match(l))&&(e.valid|=2,e.format=t[1]),(t=c.match(s))&&(e.valid|=4,e.height=parseInt(t[1],10),e.width=parseInt(t[2],10)),e.valid&2&&e.valid&4)break}return e.valid&2||n(3,"missing format specifier"),e.valid&4||n(3,"missing image size specifier"),e},P=function(r,a,o){const i=a;if(i<8||i>32767||r[0]!==2||r[1]!==2||r[2]&128)return new Uint8Array(r);i!==(r[2]<<8|r[3])&&n(3,"wrong scanline width");const l=new Uint8Array(4*a*o);l.length||n(4,"unable to allocate buffer space");let s=0,e=0;const c=4*i,t=new Uint8Array(4),w=new Uint8Array(c);let U=o;for(;U>0&&e<r.byteLength;){e+4>r.byteLength&&n(1),t[0]=r[e++],t[1]=r[e++],t[2]=r[e++],t[3]=r[e++],(t[0]!=2||t[1]!=2||(t[2]<<8|t[3])!=i)&&n(3,"bad rgbe scanline format");let S=0,m;for(;S<c&&e<r.byteLength;){m=r[e++];const p=m>128;if(p&&(m-=128),(m===0||S+m>c)&&n(3,"bad scanline data"),p){const d=r[e++];for(let N=0;N<m;N++)w[S++]=d}else w.set(r.subarray(e,e+m),S),S+=m,e+=m}const $=i;for(let p=0;p<$;p++){let d=0;l[s]=w[p+d],d+=i,l[s+1]=w[p+d],d+=i,l[s+2]=w[p+d],d+=i,l[s+3]=w[p+d],s+=4}U--}return l},z=function(r,a,o,i){const l=r[a+3],s=Math.pow(2,l-128)/255;o[i+0]=r[a+0]*s,o[i+1]=r[a+1]*s,o[i+2]=r[a+2]*s,o[i+3]=1},Y=function(r,a,o,i){const l=r[a+3],s=Math.pow(2,l-128)/255;o[i+0]=F.toHalfFloat(Math.min(r[a+0]*s,65504)),o[i+1]=F.toHalfFloat(Math.min(r[a+1]*s,65504)),o[i+2]=F.toHalfFloat(Math.min(r[a+2]*s,65504)),o[i+3]=F.toHalfFloat(1)},M=new Uint8Array(h);M.pos=0;const B=C(M),H=B.width,V=B.height,A=P(M.subarray(M.pos),H,V);let f,D,R;switch(this.type){case T:R=A.length/4;const r=new Float32Array(R*4);for(let o=0;o<R;o++)z(A,o*4,r,o*4);f=r,D=T;break;case u:R=A.length/4;const a=new Uint16Array(R*4);for(let o=0;o<R;o++)Y(A,o*4,a,o*4);f=a,D=u;break;default:throw new Error("THREE.RGBELoader: Unsupported type: "+this.type)}return{width:H,height:V,data:f,header:B.string,gamma:B.gamma,exposure:B.exposure,type:D}}setDataType(h){return this.type=h,this}load(h,g,G,E){function y(n,_){switch(n.type){case T:case u:n.colorSpace=j,n.minFilter=v,n.magFilter=v,n.generateMipmaps=!1,n.flipY=!0;break}g&&g(n,_)}return super.load(h,y,G,E)}}class Z extends X{constructor(h,g,G,E=128){if(g<=0||G<=0||E<=0)throw new Error("GroundedSkybox height, radius, and resolution must be positive.");const y=new O(G,2*E,E);y.scale(1,1,-1);const n=y.getAttribute("position"),_=new q;for(let b=0;b<n.count;++b)if(_.fromBufferAttribute(n,b),_.y<0){const L=-g*3/2,I=_.y<L?-g/_.y:1-_.y*_.y/(3*L*L);_.multiplyScalar(I),_.toArray(n.array,3*b)}n.needsUpdate=!0,super(y,new J({map:h,depthWrite:!1}))}}export{Z as G,Q as R};
